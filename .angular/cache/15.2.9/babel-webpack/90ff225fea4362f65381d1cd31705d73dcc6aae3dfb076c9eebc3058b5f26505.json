{"ast":null,"code":"import { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../recipe.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction RecipeEditComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18);\n    i0.ɵɵelement(2, \"input\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 20);\n    i0.ɵɵelement(4, \"input\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 20)(6, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function RecipeEditComponent_div_33_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onDeleteIngredient(i_r3));\n    });\n    i0.ɵɵtext(7, \" X \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r3);\n  }\n}\nexport class RecipeEditComponent {\n  constructor(route, recipeService, router) {\n    this.route = route;\n    this.recipeService = recipeService;\n    this.router = router;\n    this.id = 0;\n    this.editMode = false;\n    this.recipeForm = new FormGroup(null, null, null);\n  }\n  get ingredientsControls() {\n    return this.recipeForm.get('ingredients').controls;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.id = +params['id'];\n      this.editMode = params['id'] != null;\n      this.initForm();\n    });\n  }\n  onSubmit() {\n    const newRecipe = new Recipe(this.recipeForm.value['name'], this.recipeForm.value['description'], this.recipeForm.value['imagePath'], this.recipeForm.value['ingredients']);\n    if (this.editMode) {\n      this.recipeService.updateRecipe(this.id, this.recipeForm.value);\n    } else {\n      this.recipeService.addRecipe(this.recipeForm.value);\n    }\n    this.onCancel();\n  }\n  onAddIngredient() {\n    this.recipeForm.get('ingredients').push(new FormGroup({\n      name: new FormControl(null, Validators.required),\n      amount: new FormControl(null, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n    }));\n  }\n  onDeleteIngredient(index) {\n    this.recipeForm.get('ingredients').removeAt(index);\n  }\n  onCancel() {\n    this.router.navigate(['../'], {\n      relativeTo: this.route\n    });\n  }\n  initForm() {\n    let recipeName = '';\n    let recipeImagePath = '';\n    let recipeDescription = '';\n    let recipeIngredients = new FormArray([]);\n    if (this.editMode) {\n      const recipe = this.recipeService.getRecipe(this.id);\n      recipeName = recipe.name;\n      recipeImagePath = recipe.imagePath;\n      recipeDescription = recipe.description;\n      if (recipe['ingredients']) {\n        for (let ingredient of recipe.ingredients) {\n          recipeIngredients.push(new FormGroup({\n            name: new FormControl(ingredient.name, Validators.required),\n            amount: new FormControl(ingredient.amount, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n          }));\n        }\n      }\n    }\n    this.recipeForm = new FormGroup({\n      name: new FormControl(recipeName, Validators.required),\n      imagePath: new FormControl(recipeImagePath, Validators.required),\n      description: new FormControl(recipeDescription, Validators.required),\n      ingredients: recipeIngredients\n    });\n  }\n}\nRecipeEditComponent.ɵfac = function RecipeEditComponent_Factory(t) {\n  return new (t || RecipeEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.RecipeService), i0.ɵɵdirectiveInject(i1.Router));\n};\nRecipeEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RecipeEditComponent,\n  selectors: [[\"app-recipe-edit\"]],\n  decls: 39,\n  vars: 4,\n  consts: [[1, \"row\"], [1, \"col-xs-12\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"imagePath\"], [\"type\", \"text\", \"id\", \"imagePath\", \"formControlName\", \"imagePath\", 1, \"form-control\"], [\"imagePath\", \"\"], [1, \"img-responsive\", 3, \"src\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"formControlName\", \"description\", \"rows\", \"6\", 1, \"form-control\"], [\"formArrayName\", \"ingredients\", 1, \"col-xs-12\"], [\"class\", \"row\", \"style\", \"margin-top: 10px;\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"row\", 2, \"margin-top\", \"10px\", 3, \"formGroupName\"], [1, \"col-xs-8\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\"], [1, \"col-xs-2\"], [\"type\", \"number\", \"formControlName\", \"amount\", 1, \"form-control\"]],\n  template: function RecipeEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function RecipeEditComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"button\", 3);\n      i0.ɵɵtext(6, \" Save \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function RecipeEditComponent_Template_button_click_7_listener() {\n        return ctx.onCancel();\n      });\n      i0.ɵɵtext(8, \" Cancel \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"div\", 0)(10, \"div\", 1)(11, \"div\", 5)(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"div\", 0)(16, \"div\", 1)(17, \"div\", 5)(18, \"label\", 8);\n      i0.ɵɵtext(19, \"Image URL\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 9, 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"div\", 0)(23, \"div\", 1);\n      i0.ɵɵelement(24, \"img\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 0)(26, \"div\", 1)(27, \"div\", 5)(28, \"label\", 12);\n      i0.ɵɵtext(29, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"textarea\", 13);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(31, \"div\", 0)(32, \"div\", 14);\n      i0.ɵɵtemplate(33, RecipeEditComponent_div_33_Template, 8, 1, \"div\", 15);\n      i0.ɵɵelement(34, \"hr\");\n      i0.ɵɵelementStart(35, \"div\", 0)(36, \"div\", 1)(37, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function RecipeEditComponent_Template_button_click_37_listener() {\n        return ctx.onAddIngredient();\n      });\n      i0.ɵɵtext(38, \" Add Ingredient \");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(21);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.recipeForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.recipeForm.valid);\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"src\", _r0.value, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ingredientsControls);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName, i3.FormArrayName, i4.NgForOf],\n  styles: [\"input.ng-invalid.ng-touched[_ngcontent-%COMP%], textarea.ng-invalid.ng-touched[_ngcontent-%COMP%] {\\r\\n  border: 1px solid red;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVjaXBlcy9yZWNpcGUtZWRpdC9yZWNpcGUtZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVFLHFCQUFxQjtBQUN2QiIsInNvdXJjZXNDb250ZW50IjpbImlucHV0Lm5nLWludmFsaWQubmctdG91Y2hlZCxcclxudGV4dGFyZWEubmctaW52YWxpZC5uZy10b3VjaGVkIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,SAAS,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;;IC+DpEC,+BAKC;IAEGA,4BAAiE;IACnEA,iBAAM;IACNA,+BAAsB;IACpBA,4BAIE;IACJA,iBAAM;IACNA,+BAAsB;IAIlBA;MAAA;MAAA;MAAA;MAAA,OAASA,8CAAqB;IAAA,EAAC;IAE/BA,mBACF;IAAAA,iBAAS;;;;IApBXA,oCAAmB;;;ADzD/B,OAAM,MAAOC,mBAAmB;EAS9BC,YACUC,KAAqB,EACrBC,aAA4B,EAC5BC,MAAc;IAFd,UAAK,GAALF,KAAK;IACL,kBAAa,GAAbC,aAAa;IACb,WAAM,GAANC,MAAM;IAXhB,OAAE,GAAW,CAAC;IACd,aAAQ,GAAG,KAAK;IAChB,eAAU,GAAc,IAAIT,SAAS,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;EAUlD;EARH,IAAIU,mBAAmB;IACrB,OAAQ,IAAI,CAACC,UAAU,CAACC,GAAG,CAAC,aAAa,CAAe,CAACC,QAAQ;EACnE;EAQAC,QAAQ;IACN,IAAI,CAACP,KAAK,CAACQ,MAAM,CAACC,SAAS,CAAED,MAAc,IAAI;MAC7C,IAAI,CAACE,EAAE,GAAG,CAACF,MAAM,CAAC,IAAI,CAAC;MACvB,IAAI,CAACG,QAAQ,GAAGH,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI;MACpC,IAAI,CAACI,QAAQ,EAAE;IACjB,CAAC,CAAC;EACJ;EAEAC,QAAQ;IACN,MAAMC,SAAS,GAAG,IAAIC,MAAM,CAC1B,IAAI,CAACX,UAAU,CAACY,KAAK,CAAC,MAAM,CAAC,EAC7B,IAAI,CAACZ,UAAU,CAACY,KAAK,CAAC,aAAa,CAAC,EACpC,IAAI,CAACZ,UAAU,CAACY,KAAK,CAAC,WAAW,CAAC,EAClC,IAAI,CAACZ,UAAU,CAACY,KAAK,CAAC,aAAa,CAAC,CAAC;IACvC,IAAI,IAAI,CAACL,QAAQ,EAAE;MACjB,IAAI,CAACV,aAAa,CAACgB,YAAY,CAAC,IAAI,CAACP,EAAE,EAAE,IAAI,CAACN,UAAU,CAACY,KAAK,CAAC;KAChE,MAAM;MACL,IAAI,CAACf,aAAa,CAACiB,SAAS,CAAC,IAAI,CAACd,UAAU,CAACY,KAAK,CAAC;;IAErD,IAAI,CAACG,QAAQ,EAAE;EACjB;EAEAC,eAAe;IACD,IAAI,CAAChB,UAAU,CAACC,GAAG,CAAC,aAAa,CAAE,CAACgB,IAAI,CAClD,IAAI5B,SAAS,CAAC;MACZ6B,IAAI,EAAE,IAAI5B,WAAW,CAAC,IAAI,EAAEE,UAAU,CAAC2B,QAAQ,CAAC;MAChDC,MAAM,EAAE,IAAI9B,WAAW,CAAC,IAAI,EAAE,CAC5BE,UAAU,CAAC2B,QAAQ,EACnB3B,UAAU,CAAC6B,OAAO,CAAC,gBAAgB,CAAC,CACrC;KACF,CAAC,CACH;EACH;EAEAC,kBAAkB,CAACC,KAAa;IAClB,IAAI,CAACvB,UAAU,CAACC,GAAG,CAAC,aAAa,CAAE,CAACuB,QAAQ,CAACD,KAAK,CAAC;EACjE;EAEAR,QAAQ;IACN,IAAI,CAACjB,MAAM,CAAC2B,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;MAAEC,UAAU,EAAE,IAAI,CAAC9B;IAAK,CAAE,CAAC;EAC3D;EAEQY,QAAQ;IACd,IAAImB,UAAU,GAAG,EAAE;IACnB,IAAIC,eAAe,GAAG,EAAE;IACxB,IAAIC,iBAAiB,GAAG,EAAE;IAC1B,IAAIC,iBAAiB,GAAG,IAAIvC,SAAS,CAAC,EAAE,CAAC;IAEzC,IAAI,IAAI,CAACgB,QAAQ,EAAE;MACjB,MAAMwB,MAAM,GAAG,IAAI,CAAClC,aAAa,CAACmC,SAAS,CAAC,IAAI,CAAC1B,EAAE,CAAC;MACpDqB,UAAU,GAAGI,MAAM,CAACb,IAAI;MACxBU,eAAe,GAAGG,MAAM,CAACE,SAAS;MAClCJ,iBAAiB,GAAGE,MAAM,CAACG,WAAW;MACtC,IAAIH,MAAM,CAAC,aAAa,CAAC,EAAE;QACzB,KAAK,IAAII,UAAU,IAAIJ,MAAM,CAACK,WAAW,EAAE;UACzCN,iBAAiB,CAACb,IAAI,CACpB,IAAI5B,SAAS,CAAC;YACZ6B,IAAI,EAAE,IAAI5B,WAAW,CAAC6C,UAAU,CAACjB,IAAI,EAAE1B,UAAU,CAAC2B,QAAQ,CAAC;YAC3DC,MAAM,EAAE,IAAI9B,WAAW,CAAC6C,UAAU,CAACf,MAAM,EAAE,CACzC5B,UAAU,CAAC2B,QAAQ,EACnB3B,UAAU,CAAC6B,OAAO,CAAC,gBAAgB,CAAC,CACrC;WACF,CAAC,CACH;;;;IAKP,IAAI,CAACrB,UAAU,GAAG,IAAIX,SAAS,CAAC;MAC9B6B,IAAI,EAAE,IAAI5B,WAAW,CAACqC,UAAU,EAAEnC,UAAU,CAAC2B,QAAQ,CAAC;MACtDc,SAAS,EAAE,IAAI3C,WAAW,CAACsC,eAAe,EAAEpC,UAAU,CAAC2B,QAAQ,CAAC;MAChEe,WAAW,EAAE,IAAI5C,WAAW,CAACuC,iBAAiB,EAAErC,UAAU,CAAC2B,QAAQ,CAAC;MACpEiB,WAAW,EAAEN;KACd,CAAC;EACJ;;AAzFWpC,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAA2C;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXhChD,8BAAiB;MAEkBA;QAAA,OAAYiD,cAAU;MAAA,EAAC;MACpDjD,8BAAiB;MAOXA,sBACF;MAAAA,iBAAS;MACTA,iCAAkE;MAArBA;QAAA,OAASiD,cAAU;MAAA,EAAC;MAC/DjD,wBACF;MAAAA,iBAAS;MAGbA,8BAAiB;MAGOA,qBAAI;MAAAA,iBAAQ;MAC9BA,4BAKE;MACJA,iBAAM;MAGVA,+BAAiB;MAGYA,0BAAS;MAAAA,iBAAQ;MACxCA,gCAME;MACJA,iBAAM;MAGVA,+BAAiB;MAEbA,2BAAsD;MACxDA,iBAAM;MAERA,+BAAiB;MAGcA,4BAAW;MAAAA,iBAAQ;MAC5CA,gCAMY;MACdA,iBAAM;MAGVA,+BAAiB;MAEbA,uEAyBM;MACNA,sBAAM;MACNA,+BAAiB;MAKXA;QAAA,OAASiD,qBAAiB;MAAA,EAAC;MAE3BjD,iCACF;MAAAA,iBAAS;;;;MAlGbA,eAAwB;MAAxBA,0CAAwB;MAMtBA,eAA8B;MAA9BA,gDAA8B;MAsC3BA,gBAAuB;MAAvBA,iDAAuB;MAqBCA,eAAwB;MAAxBA,iDAAwB","names":["FormGroup","FormControl","FormArray","Validators","i0","RecipeEditComponent","constructor","route","recipeService","router","ingredientsControls","recipeForm","get","controls","ngOnInit","params","subscribe","id","editMode","initForm","onSubmit","newRecipe","Recipe","value","updateRecipe","addRecipe","onCancel","onAddIngredient","push","name","required","amount","pattern","onDeleteIngredient","index","removeAt","navigate","relativeTo","recipeName","recipeImagePath","recipeDescription","recipeIngredients","recipe","getRecipe","imagePath","description","ingredient","ingredients","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\My Projects\\AngularProject\\Angular_ngnx\\src\\app\\recipes\\recipe-edit\\recipe-edit.component.ts","C:\\Users\\User\\Desktop\\My Projects\\AngularProject\\Angular_ngnx\\src\\app\\recipes\\recipe-edit\\recipe-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\r\n\r\nimport { RecipeService } from '../recipe.service';\r\n\r\n@Component({\r\n  selector: 'app-recipe-edit',\r\n  templateUrl: './recipe-edit.component.html',\r\n  styleUrls: ['./recipe-edit.component.css']\r\n})\r\nexport class RecipeEditComponent implements OnInit {\r\n  id: number = 0;\r\n  editMode = false;\r\n  recipeForm: FormGroup = new FormGroup(null,null,null);\r\n\r\n  get ingredientsControls() {\r\n    return (this.recipeForm.get('ingredients') as FormArray).controls;\r\n  }\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private recipeService: RecipeService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe((params: Params) => {\r\n      this.id = +params['id'];\r\n      this.editMode = params['id'] != null;\r\n      this.initForm();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    const newRecipe = new Recipe(\r\n      this.recipeForm.value['name'],\r\n      this.recipeForm.value['description'],\r\n      this.recipeForm.value['imagePath'],\r\n      this.recipeForm.value['ingredients']);\r\n    if (this.editMode) {\r\n      this.recipeService.updateRecipe(this.id, this.recipeForm.value);\r\n    } else {\r\n      this.recipeService.addRecipe(this.recipeForm.value);\r\n    }\r\n    this.onCancel();\r\n  }\r\n\r\n  onAddIngredient() {\r\n    (<FormArray>this.recipeForm.get('ingredients')).push(\r\n      new FormGroup({\r\n        name: new FormControl(null, Validators.required),\r\n        amount: new FormControl(null, [\r\n          Validators.required,\r\n          Validators.pattern(/^[1-9]+[0-9]*$/)\r\n        ])\r\n      })\r\n    );\r\n  }\r\n\r\n  onDeleteIngredient(index: number) {\r\n    (<FormArray>this.recipeForm.get('ingredients')).removeAt(index);\r\n  }\r\n\r\n  onCancel() {\r\n    this.router.navigate(['../'], { relativeTo: this.route });\r\n  }\r\n\r\n  private initForm() {\r\n    let recipeName = '';\r\n    let recipeImagePath = '';\r\n    let recipeDescription = '';\r\n    let recipeIngredients = new FormArray([]);\r\n\r\n    if (this.editMode) {\r\n      const recipe = this.recipeService.getRecipe(this.id);\r\n      recipeName = recipe.name;\r\n      recipeImagePath = recipe.imagePath;\r\n      recipeDescription = recipe.description;\r\n      if (recipe['ingredients']) {\r\n        for (let ingredient of recipe.ingredients) {\r\n          recipeIngredients.push(\r\n            new FormGroup({\r\n              name: new FormControl(ingredient.name, Validators.required),\r\n              amount: new FormControl(ingredient.amount, [\r\n                Validators.required,\r\n                Validators.pattern(/^[1-9]+[0-9]*$/)\r\n              ])\r\n            })\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    this.recipeForm = new FormGroup({\r\n      name: new FormControl(recipeName, Validators.required),\r\n      imagePath: new FormControl(recipeImagePath, Validators.required),\r\n      description: new FormControl(recipeDescription, Validators.required),\r\n      ingredients: recipeIngredients\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-xs-12\">\r\n    <form [formGroup]=\"recipeForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12\">\r\n          <button\r\n            type=\"submit\"\r\n            class=\"btn btn-success\"\r\n            [disabled]=\"!recipeForm.valid\"\r\n          >\r\n            Save\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-danger\" (click)=\"onCancel()\">\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12\">\r\n          <div class=\"form-group\">\r\n            <label for=\"name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              formControlName=\"name\"\r\n              class=\"form-control\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12\">\r\n          <div class=\"form-group\">\r\n            <label for=\"imagePath\">Image URL</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"imagePath\"\r\n              formControlName=\"imagePath\"\r\n              class=\"form-control\"\r\n              #imagePath\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12\">\r\n          <img [src]=\"imagePath.value\" class=\"img-responsive\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12\">\r\n          <div class=\"form-group\">\r\n            <label for=\"description\">Description</label>\r\n            <textarea\r\n              type=\"text\"\r\n              id=\"description\"\r\n              class=\"form-control\"\r\n              formControlName=\"description\"\r\n              rows=\"6\"\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12\" formArrayName=\"ingredients\">\r\n          <div\r\n            class=\"row\"\r\n            *ngFor=\"let ingredientCtrl of ingredientsControls; let i = index\"\r\n            [formGroupName]=\"i\"\r\n            style=\"margin-top: 10px;\"\r\n          >\r\n            <div class=\"col-xs-8\">\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"name\" />\r\n            </div>\r\n            <div class=\"col-xs-2\">\r\n              <input\r\n                type=\"number\"\r\n                class=\"form-control\"\r\n                formControlName=\"amount\"\r\n              />\r\n            </div>\r\n            <div class=\"col-xs-2\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-danger\"\r\n                (click)=\"onDeleteIngredient(i)\"\r\n              >\r\n                X\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div class=\"row\">\r\n            <div class=\"col-xs-12\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-success\"\r\n                (click)=\"onAddIngredient()\"\r\n              >\r\n                Add Ingredient\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}