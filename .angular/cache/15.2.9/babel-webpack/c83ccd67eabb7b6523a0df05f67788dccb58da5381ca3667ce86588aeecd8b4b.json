{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../servers.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class EditServerComponent {\n  constructor(serversService, activatedRoute) {\n    this.serversService = serversService;\n    this.activatedRoute = activatedRoute;\n    this.server = {\n      id: 0,\n      name: '',\n      status: ''\n    };\n    this.serverName = '';\n    this.serverStatus = '';\n    this.allowEdit = 0;\n  }\n  ngOnInit() {\n    //this.server = this.serversService.getServer(1);\n    this.activatedRoute.params.subscribe(param => {\n      // console.log(this.activatedRoute.snapshot.queryParams['allowEdit']);\n      //console.log(this.activatedRoute.snapshot.fragment === null ? '1' : '0');\n      //console.log(param[\"id\"]);\n      this.server = this.serversService.getServer(+param[\"id\"]);\n      this.serverName = this.server.name;\n      this.serverStatus = this.server.status;\n    });\n    this.activatedRoute.queryParams.subscribe(qp => {\n      this.allowEdit = qp[\"allowEdit\"];\n    });\n  }\n  onUpdateServer() {\n    this.serversService.updateServer(this.server.id, {\n      name: this.serverName,\n      status: this.serverStatus\n    });\n  }\n}\n_class = EditServerComponent;\n_class.ɵfac = function EditServerComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ServersService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-edit-server\"]],\n  decls: 14,\n  vars: 3,\n  consts: [[1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"status\"], [\"id\", \"status\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"online\"], [\"value\", \"offline\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"]],\n  template: function EditServerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n      i0.ɵɵtext(2, \"Server Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function EditServerComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.serverName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 0)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Server Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"select\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function EditServerComponent_Template_select_ngModelChange_7_listener($event) {\n        return ctx.serverStatus = $event;\n      });\n      i0.ɵɵelementStart(8, \"option\", 5);\n      i0.ɵɵtext(9, \"Online\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"option\", 6);\n      i0.ɵɵtext(11, \"Offline\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function EditServerComponent_Template_button_click_12_listener() {\n        return ctx.onUpdateServer();\n      });\n      i0.ɵɵtext(13, \"Update Server\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.serverName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.serverStatus);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"disabled\", ctx.allowEdit == 1 ? false : true);\n    }\n  },\n  dependencies: [i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;AAUA,OAAM,MAAOA,mBAAmB;EAM9BC,YAAoBC,cAA8B,EAC9BC,cAA+B;IAD/B,mBAAc,GAAdD,cAAc;IACd,mBAAc,GAAdC,cAAc;IANlC,WAAM,GAAe;MAACC,EAAE,EAAG,CAAC;MAAEC,IAAI,EAAG,EAAE;MAAEC,MAAM,EAAG;IAAE,CAAC;IACrD,eAAU,GAAmB,EAAE;IAC/B,iBAAY,GAAoB,EAAE;IAClC,cAAS,GAAY,CAAC;EAGkC;EAExDC,QAAQA;IACN;IAEA,IAAI,CAACJ,cAAc,CAACK,MAAM,CAACC,SAAS,CAACC,KAAK,IAAG;MAC5C;MACA;MACC;MACA,IAAI,CAACC,MAAM,GAAG,IAAI,CAACT,cAAc,CAACU,SAAS,CAAC,CAACF,KAAK,CAAC,IAAI,CAAC,CAAC;MACzD,IAAI,CAACG,UAAU,GAAG,IAAI,CAACF,MAAM,CAACN,IAAI;MAClC,IAAI,CAACS,YAAY,GAAG,IAAI,CAACH,MAAM,CAACL,MAAM;IACtC,CAAC,CAAC;IAEF,IAAI,CAACH,cAAc,CAACY,WAAW,CAACN,SAAS,CAACO,EAAE,IAAG;MAAE,IAAI,CAACC,SAAS,GAAGD,EAAE,CAAC,WAAW,CAAC;IAAA,CAAC,CAAC;EACvF;EAEAE,cAAcA;IACZ,IAAI,CAAChB,cAAc,CAACiB,YAAY,CAAC,IAAI,CAACR,MAAM,CAACP,EAAE,EAAE;MAACC,IAAI,EAAE,IAAI,CAACQ,UAAU;MAAEP,MAAM,EAAE,IAAI,CAACQ;IAAY,CAAC,CAAC;EACtG;;SA1BWd,mBAAmB;;mBAAnBA,MAAmB;AAAA;;QAAnBA,MAAmB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVhCC,8BAAwB;MACJA,2BAAW;MAAAA,iBAAQ;MACrCA,gCAI2B;MAAzBA;QAAA;MAAA,EAAwB;MAJ1BA,iBAI2B;MAE7BA,8BAAwB;MACFA,6BAAa;MAAAA,iBAAQ;MACzCA,iCAG6B;MAA3BA;QAAA;MAAA,EAA0B;MAC1BA,iCAAuB;MAAAA,sBAAM;MAAAA,iBAAS;MACtCA,kCAAwB;MAAAA,wBAAO;MAAAA,iBAAS;MAG5CA,kCAE6B;MAA3BA;QAAA,OAASC,oBAAgB;MAAA,EAAC;MAACD,8BAAa;MAAAA,iBAAS;;;MAd/CA,eAAwB;MAAxBA,wCAAwB;MAOxBA,eAA0B;MAA1BA,0CAA0B;MAKtBA,eAAoC;MAApCA,4DAAoC","names":["EditServerComponent","constructor","serversService","activatedRoute","id","name","status","ngOnInit","params","subscribe","param","server","getServer","serverName","serverStatus","queryParams","qp","allowEdit","onUpdateServer","updateServer","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\My Projects\\AngularProject\\Angular_Route\\src\\app\\servers\\edit-server\\edit-server.component.ts","C:\\Users\\User\\Desktop\\My Projects\\AngularProject\\Angular_Route\\src\\app\\servers\\edit-server\\edit-server.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ServersService, servertype } from '../servers.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-edit-server',\r\n  templateUrl: './edit-server.component.html',\r\n  styleUrls: ['./edit-server.component.css']\r\n})\r\nexport class EditServerComponent implements OnInit {\r\n  server: servertype = {id : 0, name : '', status : ''};\r\n  serverName : string | null = '';\r\n  serverStatus : string | null  = '';\r\n  allowEdit : number = 0;\r\n\r\n  constructor(private serversService: ServersService,\r\n              private activatedRoute : ActivatedRoute,) { }\r\n\r\n  ngOnInit() {\r\n    //this.server = this.serversService.getServer(1);\r\n    \r\n    this.activatedRoute.params.subscribe(param => {\r\n     // console.log(this.activatedRoute.snapshot.queryParams['allowEdit']);\r\n     //console.log(this.activatedRoute.snapshot.fragment === null ? '1' : '0');\r\n      //console.log(param[\"id\"]);\r\n      this.server = this.serversService.getServer(+param[\"id\"]);\r\n      this.serverName = this.server.name;\r\n      this.serverStatus = this.server.status;\r\n      });\r\n      \r\n      this.activatedRoute.queryParams.subscribe(qp => {this.allowEdit = qp[\"allowEdit\"]});\r\n  }\r\n\r\n  onUpdateServer() {\r\n    this.serversService.updateServer(this.server.id, {name: this.serverName, status: this.serverStatus});\r\n  }\r\n\r\n}\r\n","<div class=\"form-group\">\r\n  <label for=\"name\">Server Name</label>\r\n  <input\r\n    type=\"text\"\r\n    id=\"name\"\r\n    class=\"form-control\"\r\n    [(ngModel)]=\"serverName\">\r\n</div>\r\n<div class=\"form-group\">\r\n  <label for=\"status\">Server Status</label>\r\n  <select\r\n    id=\"status\"\r\n    class=\"form-control\"\r\n    [(ngModel)]=\"serverStatus\">\r\n    <option value=\"online\">Online</option>\r\n    <option value=\"offline\">Offline</option>\r\n  </select>\r\n</div>\r\n<button [disabled]=\"allowEdit==1?false:true\"\r\n  class=\"btn btn-primary\"\r\n  (click)=\"onUpdateServer()\">Update Server</button>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}